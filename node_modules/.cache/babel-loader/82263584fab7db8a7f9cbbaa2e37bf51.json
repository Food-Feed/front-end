{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditRecipe.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nexport default function EditRecipe(props) {\n  console.log(props);\n  const [editRecipeForm, setEditRecipeForm] = useState(false);\n  const [state, setState] = useState({\n    title: \"\",\n    ingredients: [{\n      ingred_detail: ''\n    }],\n    recipe_steps: [{\n      step_detail: ''\n    }]\n  });\n  const [ingredientState, setIngredientState] = useState([{\n    ingred_detail: ''\n  }]);\n  const [recipeStepState, setRecipeStepState] = useState([{\n    step_detail: ''\n  }]);\n  useEffect(() => {\n    console.log(props.recipeObj);\n\n    if (props.recipeObj) {\n      setState({\n        // image: props.recipeObj.image,\n        // video: props.recipeObj.video,\n        title: props.recipeObj.title,\n        ingredients: props.recipeObj.ingredients,\n        recipe_steps: props.recipeObj.recipe_steps\n      });\n    }\n  }, []);\n  console.log(state);\n\n  const displayFormHandler = () => {\n    setEditRecipeForm(prevState => {\n      return !prevState;\n    });\n  };\n\n  const changeHandler = e => {\n    e.persist();\n    setState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(state);\n  };\n\n  const changeHandlerFiles = e => {\n    e.persist();\n    setState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.files[0]\n    }));\n    console.log(state);\n  };\n\n  const handleIngredientChange = (index, e) => {\n    e.persist();\n    const values = [...ingredientState];\n    values[index].ingred_detail = e.target.value;\n    setIngredientState(values);\n    setState(prevState => ({ ...prevState,\n      ingredients: values\n    }));\n    console.log(state);\n  };\n\n  const handleRecipeStepChange = (index, e) => {\n    e.persist();\n    const values = [...recipeStepState];\n    values[index].step_detail = e.target.value;\n    setRecipeStepState(values);\n    setState(prevState => ({ ...prevState,\n      recipe_steps: values\n    }));\n    console.log(props.formState);\n  };\n\n  const handleAddIngredientFields = () => {\n    const values = [...ingredientState];\n    values.push({\n      ingred_detail: ''\n    });\n    setIngredientState(values);\n  };\n\n  const handleRemoveIngredientFields = index => {\n    const values = [...ingredientState];\n    values.splice(index, 1);\n    setIngredientState(values);\n  };\n\n  const handleAddStepFields = () => {\n    const values = [...recipeStepState];\n    values.push({\n      step_detail: ''\n    });\n    setRecipeStepState(values);\n  };\n\n  const handleRemoveStepFields = index => {\n    const values = [...recipeStepState];\n    values.splice(index, 1);\n    setRecipeStepState(values);\n  };\n\n  const handleRecipeUpdate = e => {\n    e.preventDefault();\n    props.handleUpdate(state); // const token = localStorage.getItem(\"token\")\n    // const form = new FormData()\n    // form.append(\"image\", props.formState.image)\n    // form.append(\"video\", props.formState.video)\n    // form.append(\"title\", props.formState.title)\n    // form.append(\"ingred_list\", props.formState.ingred_list)\n    // form.append(\"description\", props.formState.description)\n    // fetch(\"http://localhost:3000/recipes\", {\n    //     method: \"PATCH\",\n    //     headers: {\n    //         \"Authorization\": `Bearer ${token}`,\n    //     },\n    //     body: form,\n    // })\n    //     .then((r) => r.json())\n    //     .then((updatedRecipe) => {\n    //         console.log(updatedRecipe)\n    //         props.renderUpdatedRecipe((prevState => [updatedRecipe, ...prevState]))\n    //     });\n    // setState({title: \"\", ingred_list: \"\", description: \"\"});\n\n    setEditRecipeForm(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, editRecipeForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Edit Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRecipeUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: changeHandler,\n    value: state.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, \"Ingredients:\"), state.ingredients.map((ingredient, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${ingredient}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingred_detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, \"Ingredient\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\" // className=\"form-control\"\n    ,\n    id: \"ingred_detail\",\n    name: \"ingred_detail\",\n    value: ingredient.ingred_detail,\n    onChange: e => handleIngredientChange(index, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleRemoveIngredientFields(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleAddIngredientFields(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, \"Directions:\"), state.recipe_steps.map((recipe_step, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${recipe_step}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"recipe_step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 37\n    }\n  }, \"Step\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"recipe_step\",\n    name: \"recipe_step\",\n    value: recipe_step.step_detail,\n    onChange: e => handleRecipeStepChange(index, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleRemoveStepFields(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleAddStepFields(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://res.cloudinary.com/hsk23/image/upload/v1597717386/Food%20Feed/edit-new-icon-22_if53kc.png\",\n    width: \"10%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditRecipe.js"],"names":["React","useState","useEffect","Fragment","EditRecipe","props","console","log","editRecipeForm","setEditRecipeForm","state","setState","title","ingredients","ingred_detail","recipe_steps","step_detail","ingredientState","setIngredientState","recipeStepState","setRecipeStepState","recipeObj","displayFormHandler","prevState","changeHandler","e","persist","target","name","value","changeHandlerFiles","files","handleIngredientChange","index","values","handleRecipeStepChange","formState","handleAddIngredientFields","push","handleRemoveIngredientFields","splice","handleAddStepFields","handleRemoveStepFields","handleRecipeUpdate","preventDefault","handleUpdate","map","ingredient","recipe_step"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react'\n\nexport default function EditRecipe(props) {\n    console.log(props)\n    const [editRecipeForm, setEditRecipeForm] = useState(false);\n    const [state, setState] = useState({\n        title: \"\",\n        ingredients: [{ingred_detail: ''}],\n        recipe_steps: [{step_detail: ''}]\n      });\n\n    const [ingredientState, setIngredientState] = useState([\n        {ingred_detail: ''}\n    ])\n\n    const [recipeStepState, setRecipeStepState] = useState([\n        {step_detail: ''}\n    ])\n    \n    \n    useEffect(() => {\n    console.log(props.recipeObj)\n    if(props.recipeObj){\n        setState({\n            // image: props.recipeObj.image,\n            // video: props.recipeObj.video,\n            title: props.recipeObj.title,\n            ingredients: props.recipeObj.ingredients,\n            recipe_steps: props.recipeObj.recipe_steps,\n        })\n    }\n    },[])\n    console.log(state)\n\n    const displayFormHandler = () => {\n        setEditRecipeForm((prevState) => {\n            return !prevState;\n        });\n    };\n\n    const changeHandler = (e) => {\n        e.persist();\n        setState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.value,\n        }));\n        console.log(state);\n    };\n\n    const changeHandlerFiles = (e) => {\n        e.persist();\n        setState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.files[0],\n        }));\n        console.log(state);\n    };\n\n    const handleIngredientChange = (index, e) => {\n        e.persist();\n        const values = [...ingredientState]\n        values[index].ingred_detail = e.target.value\n        setIngredientState(values)\n        setState((prevState) => ({\n            ...prevState,\n            ingredients: values\n        }));\n        console.log(state)\n    }\n\n    const handleRecipeStepChange = (index, e) => {\n        e.persist();\n        const values = [...recipeStepState]\n        values[index].step_detail = e.target.value\n        setRecipeStepState(values)\n        setState((prevState) => ({\n            ...prevState,\n            recipe_steps: values\n        }));\n        console.log(props.formState)\n    }\n\n    const handleAddIngredientFields = () => {\n        const values = [...ingredientState]\n        values.push({ingred_detail: ''})\n        setIngredientState(values)\n    }\n\n    const handleRemoveIngredientFields = (index) => {\n        const values = [...ingredientState]\n        values.splice(index, 1)\n        setIngredientState(values)\n    }\n\n    const handleAddStepFields = () => {\n        const values = [...recipeStepState]\n        values.push({step_detail: ''})\n        setRecipeStepState(values)\n    }\n\n    const handleRemoveStepFields = (index) => {\n        const values = [...recipeStepState]\n        values.splice(index, 1)\n        setRecipeStepState(values)\n    }\n\n    const handleRecipeUpdate = (e) => {\n        e.preventDefault()\n        props.handleUpdate(state)\n        // const token = localStorage.getItem(\"token\")\n\n        // const form = new FormData()\n        // form.append(\"image\", props.formState.image)\n        // form.append(\"video\", props.formState.video)\n        // form.append(\"title\", props.formState.title)\n        // form.append(\"ingred_list\", props.formState.ingred_list)\n        // form.append(\"description\", props.formState.description)\n\n        // fetch(\"http://localhost:3000/recipes\", {\n        //     method: \"PATCH\",\n        //     headers: {\n        //         \"Authorization\": `Bearer ${token}`,\n        //     },\n        //     body: form,\n        // })\n        //     .then((r) => r.json())\n        //     .then((updatedRecipe) => {\n        //         console.log(updatedRecipe)\n        //         props.renderUpdatedRecipe((prevState => [updatedRecipe, ...prevState]))\n        //     });\n        // setState({title: \"\", ingred_list: \"\", description: \"\"});\n        setEditRecipeForm(false);\n    };\n\n    return (\n        <>\n            {editRecipeForm ? (\n                <div className=\"form\">\n                    <h1>Edit Recipe</h1>\n                    <form onSubmit={handleRecipeUpdate}>\n                        {/* <label>Image Upload:</label>\n                        <input type=\"file\" name=\"image\" onChange={changeHandlerFiles} value={state.image}/>\n                        <br/>\n                        <label>Video Upload</label>\n                        <input type=\"file\" name=\"video\" onChange={changeHandlerFiles} value={state.video}/>\n                        <br/> */}\n                        <label>Title:</label>\n                        <input type=\"text\" name=\"title\" onChange={changeHandler} value={state.title}/>\n                        <br/>\n                        <label>Ingredients:</label>\n                        {state.ingredients.map((ingredient, index) => (\n                            <Fragment key={`${ingredient}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"ingred_detail\">Ingredient</label>\n                                    <input\n                                        type=\"text\"\n                                        // className=\"form-control\"\n                                        id=\"ingred_detail\"\n                                        name=\"ingred_detail\"\n                                        value={ingredient.ingred_detail}\n                                        onChange={e => handleIngredientChange(index, e)}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleRemoveIngredientFields(index)}\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleAddIngredientFields()}\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"ingredients\" onChange={changeHandler} value={state.ingred_list}/> */}\n                        <br/>\n                        <label>Directions:</label>\n                        {state.recipe_steps.map((recipe_step, index) => (\n                            <Fragment key={`${recipe_step}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"recipe_step\">Step</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"recipe_step\"\n                                        name=\"recipe_step\"\n                                        value={recipe_step.step_detail}\n                                        onChange={e => handleRecipeStepChange(index, e)}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleRemoveStepFields(index)}\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleAddStepFields()}\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"recipe_steps\" onChange={changeHandler} value={state.description}/> */}\n                        <br/>\n                        <input type=\"submit\"/>\n                    </form>\n                    <button\n                        onClick={displayFormHandler}\n                        className=\"buttons\"\n                    >\n                        Cancel\n                </button>\n                </div>\n                ) : (\n                <button\n                    onClick={displayFormHandler}\n                    className=\"buttons\"\n                >\n                    <img src=\"https://res.cloudinary.com/hsk23/image/upload/v1597717386/Food%20Feed/edit-new-icon-22_if53kc.png\" width=\"10%\"/>\n                </button>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}