{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/AddComment.js\";\nimport React from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nexport default function AddComment(props) {\n  // console.log(props.recipe)\n  // const changeHandler = (e) => {\n  //     e.persist();\n  //     props.setFormState((prevState) => ({\n  //       ...prevState,\n  //       [e.target.name]: e.target.value,\n  //     }));\n  //     console.log(props.formState);\n  // };\n  // const handleCommentCreation = (e) => {\n  //     e.preventDefault();\n  //     const token = localStorage.getItem(\"token\")\n  //     fetch(\"http://localhost:3000/comments\", {\n  //     method: \"POST\",\n  //     headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"Authorization\": `Bearer ${token}`,\n  //         \"Accept\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ ...props.recipe.comments, recipe_id: props.recipe_id }),\n  //     })\n  //     .then((r) => r.json())\n  //     .then((newComment) => {\n  //         console.log(newComment);\n  // props.commentState((prevState) => {\n  // return {\n  //     recipe: {\n  //     ...prevState.recipe,\n  //     comments: [\n  //         ...prevState.recipe.comments,\n  //         { ...newComment.comment, user_id: newComment.user_id },\n  //     ],\n  //     },\n  // };\n  // });\n  //     });\n  //     props.setFormState({content: \"\"});\n  // };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleCommentCreation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"New Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add your comment here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/AddComment.js"],"names":["React","Button","Form","AddComment","props","handleCommentCreation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACA;AACA;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA;AAAO,IAAA,WAAW,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,CADJ;AAWH","sourcesContent":["import React from 'react'\nimport { Button, Form } from 'semantic-ui-react'\n\nexport default function AddComment(props) {\n    // console.log(props.recipe)\n\n    // const changeHandler = (e) => {\n    //     e.persist();\n    //     props.setFormState((prevState) => ({\n    //       ...prevState,\n    //       [e.target.name]: e.target.value,\n    //     }));\n    //     console.log(props.formState);\n    // };\n\n    // const handleCommentCreation = (e) => {\n    //     e.preventDefault();\n    //     const token = localStorage.getItem(\"token\")\n    //     fetch(\"http://localhost:3000/comments\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"Authorization\": `Bearer ${token}`,\n    //         \"Accept\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({ ...props.recipe.comments, recipe_id: props.recipe_id }),\n    //     })\n    //     .then((r) => r.json())\n    //     .then((newComment) => {\n    //         console.log(newComment);\n            // props.commentState((prevState) => {\n            // return {\n            //     recipe: {\n            //     ...prevState.recipe,\n            //     comments: [\n            //         ...prevState.recipe.comments,\n            //         { ...newComment.comment, user_id: newComment.user_id },\n            //     ],\n            //     },\n            // };\n            // });\n    //     });\n    //     props.setFormState({content: \"\"});\n    // };\n\n        return (\n            <div className=\"form\">\n                <Form onSubmit={handleCommentCreation}>\n                    <Form.Field>\n                    <label>New Comment</label>\n                    <input placeholder='Add your comment here...' />\n                    </Form.Field>\n                    <Button type='submit'>Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n"]},"metadata":{},"sourceType":"module"}