{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/HoverInfoVoiceButton.js\";\nimport React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport ReactHover from 'react-hover'; // HOVER STATE \n\nconst options = {\n  followCursor: true,\n  shiftX: 20,\n  shiftY: 0\n};\nexport default function HoverInfoVoiceButton() {\n  // **** VOICE COMMAND SECTION **** //\n  let video = document.getElementById('video');\n  console.log(video);\n  const commands = [{\n    command: 'Play',\n    callback: () => video.play()\n  }, {\n    command: 'Pause',\n    callback: () => video.pause()\n  }, {\n    command: 'Rewind',\n    callback: () => video.currentTime -= 10\n  }, {\n    command: 'Fast Forward',\n    callback: () => video.currentTime += 10\n  }, {\n    command: 'Mute',\n    callback: () => video.muted = true\n  }, {\n    command: 'Unmute',\n    callback: () => video.muted = false\n  }, {\n    command: 'clear',\n    callback: ({\n      resetTranscript\n    }) => resetTranscript()\n  }];\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition({\n    commands\n  });\n  console.log(transcript);\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  const listen = () => {\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"voice-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactHover, {\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactHover.Trigger, {\n    type: \"trigger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: listen,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Turn On Voice Command\")), /*#__PURE__*/React.createElement(ReactHover.Hover, {\n    type: \"hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Test Data Here\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: SpeechRecognition.stopListening,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Turn Off Voice Command\"));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/HoverInfoVoiceButton.js"],"names":["React","SpeechRecognition","useSpeechRecognition","ReactHover","options","followCursor","shiftX","shiftY","HoverInfoVoiceButton","video","document","getElementById","console","log","commands","command","callback","play","pause","currentTime","muted","resetTranscript","transcript","browserSupportsSpeechRecognition","listen","startListening","continuous","stopListening"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CAEA;;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,YAAY,EAAE,IADF;AAEZC,EAAAA,MAAM,EAAC,EAFK;AAGZC,EAAAA,MAAM,EAAC;AAHK,CAAhB;AAMA,eAAe,SAASC,oBAAT,GAAgC;AAE3C;AAEA,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,QAAMK,QAAQ,GAAG,CACb;AACIC,IAAAA,OAAO,EAAE,MADb;AAEIC,IAAAA,QAAQ,EAAE,MAAMP,KAAK,CAACQ,IAAN;AAFpB,GADa,EAKb;AACIF,IAAAA,OAAO,EAAE,OADb;AAEIC,IAAAA,QAAQ,EAAE,MAAMP,KAAK,CAACS,KAAN;AAFpB,GALa,EASb;AACIH,IAAAA,OAAO,EAAE,QADb;AAEIC,IAAAA,QAAQ,EAAE,MAAMP,KAAK,CAACU,WAAN,IAAmB;AAFvC,GATa,EAab;AACIJ,IAAAA,OAAO,EAAE,cADb;AAEIC,IAAAA,QAAQ,EAAE,MAAMP,KAAK,CAACU,WAAN,IAAmB;AAFvC,GAba,EAiBb;AACIJ,IAAAA,OAAO,EAAE,MADb;AAEIC,IAAAA,QAAQ,EAAE,MAAMP,KAAK,CAACW,KAAN,GAAY;AAFhC,GAjBa,EAqBb;AACIL,IAAAA,OAAO,EAAE,QADb;AAEIC,IAAAA,QAAQ,EAAE,MAAMP,KAAK,CAACW,KAAN,GAAY;AAFhC,GArBa,EAyBb;AACIL,IAAAA,OAAO,EAAE,OADb;AAEIC,IAAAA,QAAQ,EAAE,CAAC;AAAEK,MAAAA;AAAF,KAAD,KAAyBA,eAAe;AAFtD,GAzBa,CAAjB;AA+BA,QAAM;AAAEC,IAAAA,UAAF;AAAcD,IAAAA;AAAd,MAAkCnB,oBAAoB,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAA5D;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYS,UAAZ;;AAEA,MAAI,CAACrB,iBAAiB,CAACsB,gCAAlB,EAAL,EAA2D;AACvD,WAAO,IAAP;AACH;;AAED,QAAMC,MAAM,GAAG,MAAM;AACjBvB,IAAAA,iBAAiB,CAACwB,cAAlB,CAAiC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAjC;AACH,GAFD;;AAIA,sBACI;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEtB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD,CAAY,OAAZ;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,OAAO,EAAEoB,MAAjB;AAAyB,IAAA,SAAS,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,CADJ,eAII,oBAAC,UAAD,CAAY,KAAZ;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CAJJ,CADJ,eASI;AAAQ,IAAA,OAAO,EAAEvB,iBAAiB,CAAC0B,aAAnC;AAAkD,IAAA,SAAS,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATJ,CADJ;AAaH","sourcesContent":["import React from 'react'\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\nimport ReactHover from 'react-hover'\n\n// HOVER STATE \n\nconst options = {\n    followCursor: true,\n    shiftX:20,\n    shiftY:0\n}\n\nexport default function HoverInfoVoiceButton() {\n\n    // **** VOICE COMMAND SECTION **** //\n\n    let video = document.getElementById('video')\n    console.log(video)\n\n    const commands = [\n        {\n            command: 'Play',\n            callback: () => video.play()\n        },\n        {\n            command: 'Pause',\n            callback: () => video.pause()\n        },\n        {\n            command: 'Rewind',\n            callback: () => video.currentTime-=10\n        },\n        {\n            command: 'Fast Forward',\n            callback: () => video.currentTime+=10\n        },\n        {\n            command: 'Mute',\n            callback: () => video.muted=true\n        },\n        {\n            command: 'Unmute',\n            callback: () => video.muted=false\n        },\n        {\n            command: 'clear',\n            callback: ({ resetTranscript }) => resetTranscript()\n        }\n    ]\n\n    const { transcript, resetTranscript } = useSpeechRecognition({ commands })\n    console.log(transcript)\n\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n        return null\n    }\n\n    const listen = () => {\n        SpeechRecognition.startListening({ continuous: true })\n    }\n\n    return (\n        <section id=\"voice-buttons\">\n            <ReactHover options={options}>\n                <ReactHover.Trigger type=\"trigger\">\n                <button onClick={listen} className=\"buttons\">Turn On Voice Command</button>\n                </ReactHover.Trigger>\n                <ReactHover.Hover type=\"hover\">\n                <p>Test Data Here</p>\n                </ReactHover.Hover>\n            </ReactHover>\n            <button onClick={SpeechRecognition.stopListening} className=\"buttons\">Turn Off Voice Command</button>\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}