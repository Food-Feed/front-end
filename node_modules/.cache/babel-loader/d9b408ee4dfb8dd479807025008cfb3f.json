{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js\";\nimport React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nexport default function AddRecipe(props) {\n  const form = props.formState;\n\n  const displayFormHandler = () => {\n    props.setRecipeForm(prevState => {\n      return !prevState;\n    });\n  };\n\n  const changeHandler = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(props.formState);\n  };\n\n  const dynamicFormChangeHandler = (index, e) => {\n    const values = [...form];\n\n    if (e.target.name === \"ingredient\") {\n      values[index].ingredient = e.target.value;\n    } else if (e.target.name === \"recipe_step\") {\n      values[index].recipe_step = e.target.value;\n    }\n\n    props.setFormState(values);\n  };\n\n  const changeHandlerFiles = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.files[0]\n    }));\n    console.log(props.formState);\n  };\n\n  const handleAddFields = e => {\n    const values = [...form];\n\n    if (e.target.name === \"ingredient\") {\n      values.ingredients.push({\n        ingredient: ''\n      });\n    } else if (e.target.name === \"recipe_step\") {\n      values.recipe_steps.push({\n        recipe_step: ''\n      });\n    }\n\n    props.setFormState(values);\n  };\n\n  const handleRemoveFields = index => {\n    const values = [...form];\n    values.splice(index, 1);\n    props.setFormState(values);\n  };\n\n  const handleRecipeCreation = e => {\n    e.preventDefault();\n    console.log(\"form state\", props.formState); // const token = localStorage.getItem(\"token\")\n    // const form = new FormData()\n    // form.append(\"image\", props.formState.image)\n    // form.append(\"video\", props.formState.video)\n    // form.append(\"title\", props.formState.title)\n    // form.append(\"ingred_list\", props.formState.ingred_list)\n    // form.append(\"description\", props.formState.description)\n    // fetch(\"http://localhost:3000/recipes\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Authorization\": `Bearer ${token}`,\n    //     },\n    //     body: form,\n    // })\n    //     .then((r) => r.json())\n    //     .then((newRecipe) => {\n    //         console.log(newRecipe)\n    //         props.renderNewRecipe((prevState => [newRecipe, ...prevState]))\n    //     });\n    // props.setFormState({image: \"\", video: \"\", title: \"\", ingred_list: \"\", description: \"\"});\n    // props.setRecipeForm(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.recipeForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"New Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRecipeCreation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Image Upload:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    onChange: changeHandlerFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Video Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"video\",\n    onChange: changeHandlerFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Ingredient List:\"), props.formState.ingredients.map((ingredient, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${ingredient}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, \"Ingredient\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"ingredient\",\n    name: \"ingredient\",\n    value: ingredient.ingred_detail,\n    onChange: e => dynamicFormChangeHandler(index, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleRemoveFields(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleAddFields(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, \"Directions:\"), props.formState.recipe_steps.map((recipe_step, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${recipe_step}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"recipe_step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, \"Step\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"recipe_step\",\n    name: \"recipe_step\",\n    value: recipe_step.step_detail,\n    onChange: e => dynamicFormChangeHandler(index, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: displayFormHandler,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"add-recipe-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"+\"));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js"],"names":["React","useState","Fragment","styled","AddRecipe","props","form","formState","displayFormHandler","setRecipeForm","prevState","changeHandler","e","persist","setFormState","target","name","value","console","log","dynamicFormChangeHandler","index","values","ingredient","recipe_step","changeHandlerFiles","files","handleAddFields","ingredients","push","recipe_steps","handleRemoveFields","splice","handleRecipeCreation","preventDefault","recipeForm","map","ingred_detail","step_detail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAMC,IAAI,GAAGD,KAAK,CAACE,SAAnB;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC7BH,IAAAA,KAAK,CAACI,aAAN,CAAqBC,SAAD,IAAe;AACjC,aAAO,CAACA,SAAR;AACD,KAFD;AAGH,GAJD;;AAMA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,OAAF;AACAR,IAAAA,KAAK,CAACS,YAAN,CAAoBJ,SAAD,KAAgB,EACjC,GAAGA,SAD8B;AAEjC,OAACE,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAFO,KAAhB,CAAnB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACE,SAAlB;AACH,GAPD;;AASA,QAAMa,wBAAwB,GAAG,CAACC,KAAD,EAAQT,CAAR,KAAc;AAC3C,UAAMU,MAAM,GAAG,CAAC,GAAGhB,IAAJ,CAAf;;AACA,QAAIM,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChCM,MAAAA,MAAM,CAACD,KAAD,CAAN,CAAcE,UAAd,GAA2BX,CAAC,CAACG,MAAF,CAASE,KAApC;AACH,KAFD,MAEO,IAAIL,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,aAAtB,EAAqC;AACxCM,MAAAA,MAAM,CAACD,KAAD,CAAN,CAAcG,WAAd,GAA4BZ,CAAC,CAACG,MAAF,CAASE,KAArC;AACH;;AAEDZ,IAAAA,KAAK,CAACS,YAAN,CAAmBQ,MAAnB;AACH,GATD;;AAWA,QAAMG,kBAAkB,GAAIb,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,OAAF;AACAR,IAAAA,KAAK,CAACS,YAAN,CAAoBJ,SAAD,KAAgB,EACjC,GAAGA,SAD8B;AAEjC,OAACE,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASW,KAAT,CAAe,CAAf;AAFgB,KAAhB,CAAnB;AAIAR,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACE,SAAlB;AACH,GAPD;;AASA,QAAMoB,eAAe,GAAIf,CAAD,IAAO;AAC3B,UAAMU,MAAM,GAAG,CAAC,GAAGhB,IAAJ,CAAf;;AACA,QAAIM,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChCM,MAAAA,MAAM,CAACM,WAAP,CAAmBC,IAAnB,CAAwB;AAACN,QAAAA,UAAU,EAAE;AAAb,OAAxB;AACH,KAFD,MAEO,IAAIX,CAAC,CAACG,MAAF,CAASC,IAAT,KAAkB,aAAtB,EAAqC;AACxCM,MAAAA,MAAM,CAACQ,YAAP,CAAoBD,IAApB,CAAyB;AAACL,QAAAA,WAAW,EAAE;AAAd,OAAzB;AACH;;AACDnB,IAAAA,KAAK,CAACS,YAAN,CAAmBQ,MAAnB;AACH,GARD;;AAUA,QAAMS,kBAAkB,GAAGV,KAAK,IAAI;AAChC,UAAMC,MAAM,GAAG,CAAC,GAAGhB,IAAJ,CAAf;AACAgB,IAAAA,MAAM,CAACU,MAAP,CAAcX,KAAd,EAAqB,CAArB;AACAhB,IAAAA,KAAK,CAACS,YAAN,CAAmBQ,MAAnB;AACH,GAJD;;AAMA,QAAMW,oBAAoB,GAAIrB,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACsB,cAAF;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bd,KAAK,CAACE,SAAhC,EAFgC,CAGhC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA1BD;;AA4BA,sBACI,0CACKF,KAAK,CAAC8B,UAAN,gBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,IAAA,QAAQ,EAAEF,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,QAAQ,EAAER,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,QAAQ,EAAEA,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,QAAQ,EAAEd,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,EAWKN,KAAK,CAACE,SAAN,CAAgBqB,WAAhB,CAA4BQ,GAA5B,CAAgC,CAACb,UAAD,EAAaF,KAAb,kBAC7B,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,GAAEE,UAAW,IAAGF,KAAM,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,EAAE,EAAC,YAHP;AAII,IAAA,IAAI,EAAC,YAJT;AAKI,IAAA,KAAK,EAAEE,UAAU,CAACc,aALtB;AAMI,IAAA,QAAQ,EAAEzB,CAAC,IAAIQ,wBAAwB,CAACC,KAAD,EAAQT,CAAR,CAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,MAAMmB,kBAAkB,CAACV,KAAD,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,eAOI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,MAAMM,eAAe,EAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,CAZJ,CADH,CAXL,eAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCJ,eA0CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1CJ,EA2CKtB,KAAK,CAACE,SAAN,CAAgBuB,YAAhB,CAA6BM,GAA7B,CAAiC,CAACZ,WAAD,EAAcH,KAAd,kBAC9B,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,GAAEG,WAAY,IAAGH,KAAM,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,EAAE,EAAC,aAHP;AAII,IAAA,IAAI,EAAC,aAJT;AAKI,IAAA,KAAK,EAAEG,WAAW,CAACc,WALvB;AAMI,IAAA,QAAQ,EAAE1B,CAAC,IAAIQ,wBAAwB,CAACC,KAAD,EAAQT,CAAR,CAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,eAMI;AACI,IAAA,IAAI,EAAC,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,CAZJ,CADH,CA3CL,eAuEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEJ,eAwEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxEJ,CAFJ,eA4EI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAEJ,kBAFb;AAGI,IAAA,SAAS,EAAC,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EJ,CADH,gBAsFG;AACI,IAAA,OAAO,EAAEA,kBADb;AAEI,IAAA,SAAS,EAAC,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAvFR,CADJ;AAiGH","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport styled from 'styled-components';\n\nexport default function AddRecipe(props) {\n\n    const form = props.formState\n\n    const displayFormHandler = () => {\n        props.setRecipeForm((prevState) => {\n          return !prevState;\n        });\n    };\n\n    const changeHandler = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.value,\n        }));\n        console.log(props.formState);\n    };\n\n    const dynamicFormChangeHandler = (index, e) => {\n        const values = [...form];\n        if (e.target.name === \"ingredient\") {\n            values[index].ingredient = e.target.value\n        } else if (e.target.name === \"recipe_step\") {\n            values[index].recipe_step = e.target.value\n        }\n\n        props.setFormState(values)\n    }\n\n    const changeHandlerFiles = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.files[0],\n        }));\n        console.log(props.formState);\n    };\n\n    const handleAddFields = (e) => {\n        const values = [...form]\n        if (e.target.name === \"ingredient\") {\n            values.ingredients.push({ingredient: ''})\n        } else if (e.target.name === \"recipe_step\") {\n            values.recipe_steps.push({recipe_step: ''})\n        }\n        props.setFormState(values)\n    }\n\n    const handleRemoveFields = index => {\n        const values = [...form]\n        values.splice(index, 1)\n        props.setFormState(values)\n    }\n\n    const handleRecipeCreation = (e) => {\n        e.preventDefault();\n        console.log(\"form state\", props.formState)\n        // const token = localStorage.getItem(\"token\")\n\n        // const form = new FormData()\n        // form.append(\"image\", props.formState.image)\n        // form.append(\"video\", props.formState.video)\n        // form.append(\"title\", props.formState.title)\n        // form.append(\"ingred_list\", props.formState.ingred_list)\n        // form.append(\"description\", props.formState.description)\n\n        // fetch(\"http://localhost:3000/recipes\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Authorization\": `Bearer ${token}`,\n        //     },\n        //     body: form,\n        // })\n        //     .then((r) => r.json())\n        //     .then((newRecipe) => {\n        //         console.log(newRecipe)\n        //         props.renderNewRecipe((prevState => [newRecipe, ...prevState]))\n        //     });\n        // props.setFormState({image: \"\", video: \"\", title: \"\", ingred_list: \"\", description: \"\"});\n        // props.setRecipeForm(false);\n    };\n\n    return (\n        <>\n            {props.recipeForm ? (\n                <div className=\"form\">\n                    <h1>New Recipe</h1>\n                    <form onSubmit={handleRecipeCreation}>\n                        <label>Image Upload:</label>\n                        <input type=\"file\" name=\"image\" onChange={changeHandlerFiles}/>\n                        <br/>\n                        <label>Video Upload</label>\n                        <input type=\"file\" name=\"video\" onChange={changeHandlerFiles}/>\n                        <br/>\n                        <label>Title:</label>\n                        <input type=\"text\" name=\"title\" onChange={changeHandler}/>\n                        <br/>\n                        <label>Ingredient List:</label>\n                        {props.formState.ingredients.map((ingredient, index) => (\n                            <Fragment key={`${ingredient}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"ingredient\">Ingredient</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"ingredient\"\n                                        name=\"ingredient\"\n                                        value={ingredient.ingred_detail}\n                                        onChange={e => dynamicFormChangeHandler(index, e)}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleRemoveFields(index)}\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleAddFields()}\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"ingred_list\" onChange={changeHandler}/> */}\n                        <br/>\n                        <label>Directions:</label>\n                        {props.formState.recipe_steps.map((recipe_step, index) => (\n                            <Fragment key={`${recipe_step}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"recipe_step\">Step</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"recipe_step\"\n                                        name=\"recipe_step\"\n                                        value={recipe_step.step_detail}\n                                        onChange={e => dynamicFormChangeHandler(index, e)}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"description\" onChange={changeHandler}/> */}\n                        <br/>\n                        <input type=\"submit\"/>\n                    </form>\n                    <button\n                        type=\"button\"\n                        onClick={displayFormHandler}\n                        className=\"\"\n                    >\n                        Cancel\n                </button>\n                </div>\n                ) : (\n                <button\n                    onClick={displayFormHandler}\n                    className=\"add-recipe-button\"\n                >\n                    +\n                </button>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}