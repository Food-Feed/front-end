{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditComment.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport RecipeDetail from './RecipeDetail';\nimport './RecipeDetail.css'; // props \n// editForm={editForm}\n// setEditForm={setEditForm}\n// comment={props.comment}\n\nexport default function EditComment(props) {\n  const [state, setState] = useState({});\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/comments/${props.comment.id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n        \"Accept\": \"application/json\"\n      }\n    }).then(r => r.json()).then(comment => {\n      setState(comment);\n      console.log(comment);\n    });\n  }, []);\n\n  const changeHandler = e => {\n    e.persist();\n    console.log(e.target); // props.setFormState(state);\n    // console.log(props.formState);\n  };\n\n  const handleCommentEdit = e => {\n    e.preventDefault();\n    console.log(\"comment state\", props.formState);\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:3000/comments\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(state)\n    }).then(r => r.json()).then(newComment => {\n      console.log(newComment);\n      props.renderNewComment(prevState => [...prevState, newComment]);\n    });\n    props.setFormState({\n      recipe_id: props.recipe.id,\n      content: \"\"\n    });\n    setState({\n      recipe_id: props.recipe.id,\n      content: \"\"\n    });\n    console.log(props.recipe.comments);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleCommentEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"new-comment-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Edit Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add your comment here...\",\n    name: \"content\",\n    value: state.content,\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditComment.js"],"names":["React","useEffect","useState","Button","Form","RecipeDetail","EditComment","props","state","setState","token","localStorage","getItem","fetch","comment","id","method","headers","then","r","json","console","log","changeHandler","e","persist","target","handleCommentEdit","preventDefault","formState","body","JSON","stringify","newComment","renderNewComment","prevState","setFormState","recipe_id","recipe","content","comments"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Form } from 'semantic-ui-react'\nimport RecipeDetail from './RecipeDetail';\nimport './RecipeDetail.css'\n\n// props \n// editForm={editForm}\n// setEditForm={setEditForm}\n// comment={props.comment}\n\nexport default function EditComment(props) {\n    const [state, setState] = useState({})\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\")\n        fetch(`http://localhost:3000/comments/${props.comment.id}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`,\n                \"Accept\": \"application/json\"\n            }\n        })\n            .then(r => r.json())\n            .then(comment => {\n                setState(comment)\n                console.log(comment)\n            });\n    }, []);\n\n    const changeHandler = (e) => {\n        e.persist();\n        console.log(e.target)\n        // props.setFormState(state);\n        // console.log(props.formState);\n    };\n\n    const handleCommentEdit = (e) => {\n        e.preventDefault();\n        console.log(\"comment state\", props.formState)\n        const token = localStorage.getItem(\"token\")\n\n        fetch(\"http://localhost:3000/comments\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${token}`,\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(state),\n        })\n            .then((r) => r.json())\n            .then((newComment) => {\n                console.log(newComment)\n                props.renderNewComment((prevState => [...prevState, newComment]))\n            });\n        props.setFormState({recipe_id: props.recipe.id, content: \"\"});\n        setState({recipe_id: props.recipe.id, content: \"\"});\n        console.log(props.recipe.comments)\n    };\n\n        return (\n            <div className=\"form\">\n                <Form onSubmit={handleCommentEdit}>\n                    <Form.Field>\n                        <label id=\"new-comment-text\">Edit Comment</label>\n                        <input \n                            placeholder='Add your comment here...' \n                            name=\"content\"\n                            value={state.content}\n                            onChange={e => changeHandler(e)}/>\n                    </Form.Field>\n                    <Button type='submit'>Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n"]},"metadata":{},"sourceType":"module"}