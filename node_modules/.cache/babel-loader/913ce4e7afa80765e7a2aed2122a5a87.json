{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/AddComment.js\";\nimport React, { useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport RecipeDetail from './RecipeDetail';\nimport './RecipeDetail.css';\nexport default function AddComment(props) {\n  const [state, setState] = useState({}); // console.log(props.recipe)\n\n  const recipe = props.recipe;\n\n  const changeHandler = e => {\n    e.persist();\n    setState({\n      recipe_id: recipe.id,\n      content: e.target.value\n    });\n    props.setFormState(state); // console.log(props.formState);\n  };\n\n  const handleCommentCreation = e => {\n    e.preventDefault(); // console.log(\"comment state\", props.formState)\n\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:3000/comments\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`,\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(state)\n    }).then(r => r.json()).then(newComment => {\n      // console.log(newComment)\n      props.renderNewComment(prevState => [...prevState, newComment]);\n    });\n    props.setFormState({\n      recipe_id: props.recipe.id,\n      content: \"\"\n    });\n    setState({\n      recipe_id: props.recipe.id,\n      content: \"\"\n    }); // console.log(props.recipe.comments)\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleCommentCreation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"new-comment-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"New Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add your comment here...\",\n    name: \"content\",\n    value: state.content,\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/AddComment.js"],"names":["React","useState","Button","Form","RecipeDetail","AddComment","props","state","setState","recipe","changeHandler","e","persist","recipe_id","id","content","target","value","setFormState","handleCommentCreation","preventDefault","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","then","r","json","newComment","renderNewComment","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,oBAAP;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CADsC,CAEtC;;AACA,QAAMQ,MAAM,GAAGH,KAAK,CAACG,MAArB;;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,OAAF;AACAJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,SAAS,EAAEJ,MAAM,CAACK,EAAnB;AAAuBC,MAAAA,OAAO,EAAEJ,CAAC,CAACK,MAAF,CAASC;AAAzC,KAAD,CAAR;AACAX,IAAAA,KAAK,CAACY,YAAN,CAAmBX,KAAnB,EAHyB,CAIzB;AACH,GALD;;AAOA,QAAMY,qBAAqB,GAAIR,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACS,cAAF,GADiC,CAEjC;;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASL,KAAM,EAF5B;AAGL,kBAAU;AAHL,OAF2B;AAOpCM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,KAAf;AAP8B,KAAnC,CAAL,CASKuB,IATL,CASWC,CAAD,IAAOA,CAAC,CAACC,IAAF,EATjB,EAUKF,IAVL,CAUWG,UAAD,IAAgB;AAClB;AACA3B,MAAAA,KAAK,CAAC4B,gBAAN,CAAwBC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,UAAf,CAArC;AACH,KAbL;AAcA3B,IAAAA,KAAK,CAACY,YAAN,CAAmB;AAACL,MAAAA,SAAS,EAAEP,KAAK,CAACG,MAAN,CAAaK,EAAzB;AAA6BC,MAAAA,OAAO,EAAE;AAAtC,KAAnB;AACAP,IAAAA,QAAQ,CAAC;AAACK,MAAAA,SAAS,EAAEP,KAAK,CAACG,MAAN,CAAaK,EAAzB;AAA6BC,MAAAA,OAAO,EAAE;AAAtC,KAAD,CAAR,CApBiC,CAqBjC;AACH,GAtBD;;AAwBI,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEI,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AACI,IAAA,WAAW,EAAC,0BADhB;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,KAAK,EAAEZ,KAAK,CAACQ,OAHjB;AAII,IAAA,QAAQ,EAAEJ,CAAC,IAAID,aAAa,CAACC,CAAD,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eASI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADJ,CADJ;AAeH","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Form } from 'semantic-ui-react'\nimport RecipeDetail from './RecipeDetail';\nimport './RecipeDetail.css'\n\nexport default function AddComment(props) {\n    const [state, setState] = useState({})\n    // console.log(props.recipe)\n    const recipe = props.recipe\n\n    const changeHandler = (e) => {\n        e.persist();\n        setState({recipe_id: recipe.id, content: e.target.value})\n        props.setFormState(state);\n        // console.log(props.formState);\n    };\n\n    const handleCommentCreation = (e) => {\n        e.preventDefault();\n        // console.log(\"comment state\", props.formState)\n        const token = localStorage.getItem(\"token\")\n\n        fetch(\"http://localhost:3000/comments\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `Bearer ${token}`,\n                \"Accept\": \"application/json\",\n            },\n            body: JSON.stringify(state),\n        })\n            .then((r) => r.json())\n            .then((newComment) => {\n                // console.log(newComment)\n                props.renderNewComment((prevState => [...prevState, newComment]))\n            });\n        props.setFormState({recipe_id: props.recipe.id, content: \"\"});\n        setState({recipe_id: props.recipe.id, content: \"\"});\n        // console.log(props.recipe.comments)\n    };\n\n        return (\n            <div className=\"form\">\n                <Form onSubmit={handleCommentCreation}>\n                    <Form.Field>\n                        <label id=\"new-comment-text\">New Comment</label>\n                        <input \n                            placeholder='Add your comment here...' \n                            name=\"content\"\n                            value={state.content}\n                            onChange={e => changeHandler(e)}/>\n                    </Form.Field>\n                    <Button type='submit'>Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n"]},"metadata":{},"sourceType":"module"}