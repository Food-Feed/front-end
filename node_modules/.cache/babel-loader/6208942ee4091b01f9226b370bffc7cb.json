{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/CommentContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport './RecipeDetail.css';\nexport default function CommentContainer(props) {\n  // const [state, setState] = useState([]);\n  // const [commentForm, setCommentForm] = useState();\n  // const [commentId, setCommentId] = useState(\"\");\n  // console.log(state)\n  const current_recipe_id = props.recipe.id;\n  const [formState, setFormState] = useState({\n    recipe_id: current_recipe_id,\n    content: \"\"\n  });\n\n  const renderComments = () => {\n    return props.comments.map(comment => /*#__PURE__*/React.createElement(Comment, {\n      comment: comment,\n      key: comment.id,\n      user: props.user // handleUpdate={handleUpdate}\n      ,\n      handleDelete: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const handleDelete = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/comments`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n        \"Accept\": \"application/json\"\n      }\n    }).then(r => r.json()).then(deletedComment => {\n      console.log(deletedComment);\n    });\n  }; // const handleUpdate = () => {\n  //     console.log(formState)\n  //     const token = localStorage.getItem(\"token\")\n  //     fetch(\"http://localhost:3000/comments\", {\n  //     method: \"POST\",\n  //     headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"Authorization\": `Bearer ${token}`,\n  //         \"Accept\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(formState),\n  //     })\n  //     .then((r) => r.json())\n  //     .then((newComment) => {\n  //         console.log(newComment);\n  //         // props.setState((prevState => [...prevState, ]))\n  //         // debugger\n  //         props.setState((prevState) => ({\n  //             ...prevState,\n  //             comments: [...props.recipe.comments, newComment]\n  //         }))\n  //     })\n  //     setFormState({recipe_id: current_recipe_id, content: \"\"})\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comment-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Comments:\"), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"comments-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, props.comments && renderComments()), /*#__PURE__*/React.createElement(AddComment, {\n    formState: formState,\n    setFormState: setFormState,\n    recipe: props.recipe // handleUpdate={handleUpdate}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/CommentContainer.js"],"names":["React","useEffect","useState","Comment","AddComment","CommentContainer","props","current_recipe_id","recipe","id","formState","setFormState","recipe_id","content","renderComments","comments","map","comment","user","handleDelete","token","localStorage","getItem","fetch","method","headers","then","r","json","deletedComment","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,oBAAP;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C;AACA;AACA;AACA;AACA,QAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAAvC;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AACvCU,IAAAA,SAAS,EAAEL,iBAD4B;AAEvCM,IAAAA,OAAO,EAAE;AAF8B,GAAD,CAA1C;;AAKA,QAAMC,cAAc,GAAG,MAAM;AACzB,WAAOR,KAAK,CAACS,QAAN,CAAeC,GAAf,CAAmBC,OAAO,iBAC7B,oBAAC,OAAD;AACI,MAAA,OAAO,EAAEA,OADb;AAEI,MAAA,GAAG,EAAEA,OAAO,CAACR,EAFjB;AAGI,MAAA,IAAI,EAAEH,KAAK,CAACY,IAHhB,CAII;AAJJ;AAKI,MAAA,YAAY,EAAEC,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AASH,GAVD;;AAYA,QAAMA,YAAY,GAAG,MAAM;AACvB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,KAAK,CAAE,gCAAF,EAAmC;AACtCC,MAAAA,MAAM,EAAE,QAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASL,KAAM,EAF5B;AAGL,kBAAU;AAHL;AAF6B,KAAnC,CAAL,CAQGM,IARH,CAQSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EARf,EASGF,IATH,CASQG,cAAc,IAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACD,KAXH;AAYH,GAdD,CAxB4C,CAwC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAGI;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,KAAK,CAACS,QAAN,IAAkBD,cAAc,EADrC,CAHJ,eAMI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAEJ,SADf;AAEI,IAAA,YAAY,EAAEC,YAFlB;AAGI,IAAA,MAAM,EAAEL,KAAK,CAACE,MAHlB,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAqBH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Comment from './Comment'\nimport AddComment from './AddComment'\nimport './RecipeDetail.css'\n\nexport default function CommentContainer(props) {\n    // const [state, setState] = useState([]);\n    // const [commentForm, setCommentForm] = useState();\n    // const [commentId, setCommentId] = useState(\"\");\n    // console.log(state)\n    const current_recipe_id = props.recipe.id\n\n    const [formState, setFormState] = useState({\n        recipe_id: current_recipe_id,\n        content: \"\"\n    });\n\n    const renderComments = () => {\n        return props.comments.map(comment => (\n            <Comment\n                comment={comment}\n                key={comment.id}\n                user={props.user}\n                // handleUpdate={handleUpdate}\n                handleDelete={handleDelete}\n            />\n        ))\n    }\n\n    const handleDelete = () => {\n        const token = localStorage.getItem(\"token\")\n        fetch(`http://localhost:3000/comments`, {\n          method: \"DELETE\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${token}`,\n              \"Accept\": \"application/json\"\n          }\n        })\n          .then((r) => r.json())\n          .then(deletedComment => {\n            console.log(deletedComment)\n          })\n    }\n\n    // const handleUpdate = () => {\n    //     console.log(formState)\n    //     const token = localStorage.getItem(\"token\")\n    //     fetch(\"http://localhost:3000/comments\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"Authorization\": `Bearer ${token}`,\n    //         \"Accept\": \"application/json\",\n    //     },\n    //     body: JSON.stringify(formState),\n    //     })\n    //     .then((r) => r.json())\n    //     .then((newComment) => {\n    //         console.log(newComment);\n    //         // props.setState((prevState => [...prevState, ]))\n    //         // debugger\n    //         props.setState((prevState) => ({\n    //             ...prevState,\n    //             comments: [...props.recipe.comments, newComment]\n    //         }))\n    //     })\n    //     setFormState({recipe_id: current_recipe_id, content: \"\"})\n    // }\n\n    return (\n        <div className=\"comment-container\">\n            <p className=\"comment-title\">Comments:</p>\n            {/* <hr/> */}\n            <section id=\"comments-list\">\n                {props.comments && renderComments()}\n            </section>\n            <AddComment \n                formState={formState}\n                setFormState={setFormState}\n                recipe={props.recipe}\n                // handleUpdate={handleUpdate}\n            />\n            {/* {state.user_id == props.user.id && (\n              <>\n                <button>Edit Recipe</button>\n                <button onClick={handleDelete}>Delete Recipe</button>\n              </>\n            )} */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}