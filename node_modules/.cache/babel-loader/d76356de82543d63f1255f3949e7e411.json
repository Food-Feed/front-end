{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js\";\nimport React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nexport default function AddRecipe(props) {\n  const [state, setState] = useState({\n    image: \"\",\n    video: \"\",\n    title: \"\" // ingredients: [{ingred_detail: ''}],\n    // recipe_steps: [{step_detail: ''}]\n\n  });\n  const [ingredientState, setIngredientState] = useState([{\n    ingred_detail: ''\n  }]);\n  const [recipeStepState, setRecipeStepState] = useState([{\n    step_detail: ''\n  }]);\n\n  const displayFormHandler = () => {\n    props.setRecipeForm(prevState => {\n      return !prevState;\n    });\n  };\n\n  const changeHandler = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(props.formState);\n  };\n\n  const dynamicFormChangeHandler = (index, e) => {\n    const values = [...ingredientState];\n\n    if (e.target.name === \"ingred_detail\") {\n      values[index].ingred_detail = e.target.value;\n    } else if (e.target.name === \"recipe_step\") {\n      values[index].recipe_step = e.target.value;\n    }\n\n    setIngredientState(values);\n  };\n\n  const changeHandlerFiles = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.files[0]\n    }));\n    console.log(props.formState);\n  };\n\n  const handleAddIngredientFields = () => {\n    const values = [...ingredientState];\n    values.push({\n      ingred_detail: ''\n    });\n    setIngredientState(values);\n  };\n\n  const handleRemoveIngredientFields = index => {\n    const values = [...ingredientState];\n    values.splice(index, 1);\n    setIngredientState(values);\n  };\n\n  const handleRecipeCreation = e => {\n    e.preventDefault();\n    console.log(\"ingredients state\", ingredientState);\n    console.log(\"recipe state\", props.formState); // const token = localStorage.getItem(\"token\")\n    // const form = new FormData()\n    // form.append(\"image\", props.formState.image)\n    // form.append(\"video\", props.formState.video)\n    // form.append(\"title\", props.formState.title)\n    // form.append(\"ingred_list\", props.formState.ingred_list)\n    // form.append(\"description\", props.formState.description)\n    // fetch(\"http://localhost:3000/recipes\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Authorization\": `Bearer ${token}`,\n    //     },\n    //     body: form,\n    // })\n    //     .then((r) => r.json())\n    //     .then((newRecipe) => {\n    //         console.log(newRecipe)\n    //         props.renderNewRecipe((prevState => [newRecipe, ...prevState]))\n    //     });\n    // props.setFormState({image: \"\", video: \"\", title: \"\", ingred_list: \"\", description: \"\"});\n    // props.setRecipeForm(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.recipeForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"New Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRecipeCreation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, \"Image Upload:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    onChange: changeHandlerFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Video Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"video\",\n    onChange: changeHandlerFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Ingredient List:\"), ingredientState.map((ingredient, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${ingredient}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingred_detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, \"Ingredient\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\" // className=\"form-control\"\n    ,\n    id: \"ingred_detail\",\n    name: \"ingred_detail\",\n    value: ingredient.ingred_detail,\n    onChange: e => dynamicFormChangeHandler(index, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleRemoveIngredientFields(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleAddIngredientFields(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, \"Directions:\"), state.recipe_steps.map((recipe_step, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${recipe_step}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"recipe_step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }, \"Step\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"recipe_step\",\n    name: \"recipe_step\",\n    value: recipe_step.step_detail,\n    onChange: e => dynamicFormChangeHandler(index, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: displayFormHandler,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"add-recipe-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"+\"));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js"],"names":["React","useState","Fragment","styled","AddRecipe","props","state","setState","image","video","title","ingredientState","setIngredientState","ingred_detail","recipeStepState","setRecipeStepState","step_detail","displayFormHandler","setRecipeForm","prevState","changeHandler","e","persist","setFormState","target","name","value","console","log","formState","dynamicFormChangeHandler","index","values","recipe_step","changeHandlerFiles","files","handleAddIngredientFields","push","handleRemoveIngredientFields","splice","handleRecipeCreation","preventDefault","recipeForm","map","ingredient","recipe_steps"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport styled from 'styled-components';\n\nexport default function AddRecipe(props) {\n\n    const [state, setState] = useState({\n        image: \"\",\n        video: \"\",\n        title: \"\",\n        // ingredients: [{ingred_detail: ''}],\n        // recipe_steps: [{step_detail: ''}]\n    })\n\n    const [ingredientState, setIngredientState] = useState([\n        {ingred_detail: ''}\n    ])\n\n    const [recipeStepState, setRecipeStepState] = useState([\n        {step_detail: ''}\n    ])\n\n    const displayFormHandler = () => {\n        props.setRecipeForm((prevState) => {\n          return !prevState;\n        });\n    };\n\n    const changeHandler = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.value,\n        }));\n        console.log(props.formState);\n    };\n\n    const dynamicFormChangeHandler = (index, e) => {\n        const values = [...ingredientState]\n        if (e.target.name === \"ingred_detail\") {\n            values[index].ingred_detail = e.target.value\n        } else if (e.target.name === \"recipe_step\") {\n            values[index].recipe_step = e.target.value\n        }\n\n        setIngredientState(values)\n    }\n\n    const changeHandlerFiles = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.files[0],\n        }));\n        console.log(props.formState);\n    };\n\n    const handleAddIngredientFields = () => {\n        const values = [...ingredientState]\n        values.push({ingred_detail: ''})\n        setIngredientState(values)\n    }\n\n    const handleRemoveIngredientFields = (index) => {\n        const values = [...ingredientState]\n        values.splice(index, 1)\n        setIngredientState(values)\n    }\n\n    const handleRecipeCreation = (e) => {\n        e.preventDefault();\n        console.log(\"ingredients state\", ingredientState)\n        console.log(\"recipe state\", props.formState)\n        // const token = localStorage.getItem(\"token\")\n\n        // const form = new FormData()\n        // form.append(\"image\", props.formState.image)\n        // form.append(\"video\", props.formState.video)\n        // form.append(\"title\", props.formState.title)\n        // form.append(\"ingred_list\", props.formState.ingred_list)\n        // form.append(\"description\", props.formState.description)\n\n        // fetch(\"http://localhost:3000/recipes\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Authorization\": `Bearer ${token}`,\n        //     },\n        //     body: form,\n        // })\n        //     .then((r) => r.json())\n        //     .then((newRecipe) => {\n        //         console.log(newRecipe)\n        //         props.renderNewRecipe((prevState => [newRecipe, ...prevState]))\n        //     });\n        // props.setFormState({image: \"\", video: \"\", title: \"\", ingred_list: \"\", description: \"\"});\n        // props.setRecipeForm(false);\n    };\n\n    return (\n        <>\n            {props.recipeForm ? (\n                <div className=\"form\">\n                    <h1>New Recipe</h1>\n                    <form onSubmit={handleRecipeCreation}>\n                        <label>Image Upload:</label>\n                        <input type=\"file\" name=\"image\" onChange={changeHandlerFiles}/>\n                        <br/>\n                        <label>Video Upload</label>\n                        <input type=\"file\" name=\"video\" onChange={changeHandlerFiles}/>\n                        <br/>\n                        <label>Title:</label>\n                        <input type=\"text\" name=\"title\" onChange={changeHandler}/>\n                        <br/>\n                        <label>Ingredient List:</label>\n                        {ingredientState.map((ingredient, index) => (\n                            <Fragment key={`${ingredient}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"ingred_detail\">Ingredient</label>\n                                    <input\n                                        type=\"text\"\n                                        // className=\"form-control\"\n                                        id=\"ingred_detail\"\n                                        name=\"ingred_detail\"\n                                        value={ingredient.ingred_detail}\n                                        onChange={e => dynamicFormChangeHandler(index, e)}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleRemoveIngredientFields(index)}\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleAddIngredientFields()}\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"ingred_list\" onChange={changeHandler}/> */}\n                        <br/>\n                        <label>Directions:</label>\n                        {state.recipe_steps.map((recipe_step, index) => (\n                            <Fragment key={`${recipe_step}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"recipe_step\">Step</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"recipe_step\"\n                                        name=\"recipe_step\"\n                                        value={recipe_step.step_detail}\n                                        onChange={e => dynamicFormChangeHandler(index, e)}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"description\" onChange={changeHandler}/> */}\n                        <br/>\n                        <input type=\"submit\"/>\n                    </form>\n                    <button\n                        type=\"button\"\n                        onClick={displayFormHandler}\n                        className=\"\"\n                    >\n                        Cancel\n                </button>\n                </div>\n                ) : (\n                <button\n                    onClick={displayFormHandler}\n                    className=\"add-recipe-button\"\n                >\n                    +\n                </button>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}