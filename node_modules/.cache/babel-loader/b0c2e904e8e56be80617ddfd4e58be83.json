{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/CommentContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport './RecipeDetail.css';\nexport default function CommentContainer(props) {\n  const [state, setState] = useState([]);\n  const [commentForm, setCommentForm] = useState();\n  const [commentId, setCommentId] = useState(\"\");\n  console.log(props);\n  const [formState, setFormState] = useState({\n    recipe_id: props.recipe.id,\n    content: \"\"\n  });\n\n  const renderComments = () => {\n    return props.comments.map(comment => /*#__PURE__*/React.createElement(Comment, {\n      comment: comment,\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const handleDelete = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(`http://localhost:3000/recipes/${props.match.params.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n        \"Accept\": \"application/json\"\n      }\n    }).then(r => r.json()).then(deletedComment => {\n      console.log(deletedComment);\n    });\n  };\n\n  const handleUpdate = () => {\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:3000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(formState)\n    }).then(r => r.json()).then(newComment => {\n      console.log(newComment); // props.setState({\n      //     ...prevState,\n      //     comments: [props.comments]\n      // })\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"comment-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Comments:\"), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"comments-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, props.comments && renderComments()), /*#__PURE__*/React.createElement(AddComment, {\n    commentForm: commentForm,\n    renderNewComment: setState,\n    commentId: commentId,\n    formState: formState,\n    setIsNew: setCommentId,\n    setFormState: setFormState,\n    recipe: props.recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), state.user_id == props.user.id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Edit Recipe\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Delete Recipe\")));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/CommentContainer.js"],"names":["React","useEffect","useState","Comment","AddComment","CommentContainer","props","state","setState","commentForm","setCommentForm","commentId","setCommentId","console","log","formState","setFormState","recipe_id","recipe","id","content","renderComments","comments","map","comment","handleDelete","token","localStorage","getItem","fetch","match","params","method","headers","then","r","json","deletedComment","handleUpdate","body","JSON","stringify","newComment","user_id","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Comment from './Comment'\nimport AddComment from './AddComment'\nimport './RecipeDetail.css'\n\nexport default function CommentContainer(props) {\n    const [state, setState] = useState([]);\n    const [commentForm, setCommentForm] = useState();\n    const [commentId, setCommentId] = useState(\"\");\n    console.log(props)\n\n    const [formState, setFormState] = useState({\n        recipe_id: props.recipe.id,\n        content: \"\"\n    });\n\n    const renderComments = () => {\n        return props.comments.map(comment => (\n            <Comment\n                comment={comment}\n                key={comment.id}\n            />\n        ))\n    }\n\n    const handleDelete = () => {\n        const token = localStorage.getItem(\"token\")\n        fetch(`http://localhost:3000/recipes/${props.match.params.id}`, {\n          method: \"DELETE\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${token}`,\n              \"Accept\": \"application/json\"\n          }\n        })\n          .then((r) => r.json())\n          .then(deletedComment => {\n            console.log(deletedComment)\n          })\n    }\n\n    const handleUpdate = () => {\n        const token = localStorage.getItem(\"token\")\n        fetch(\"http://localhost:3000/comments\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`,\n            \"Accept\": \"application/json\",\n        },\n        body: JSON.stringify(formState),\n        })\n        .then((r) => r.json())\n        .then((newComment) => {\n            console.log(newComment);\n            // props.setState({\n            //     ...prevState,\n            //     comments: [props.comments]\n            // })\n        })\n    }\n\n    return (\n        <div className=\"comment-container\">\n            <p className=\"comment-title\">Comments:</p>\n            <section id=\"comments-list\">\n                {props.comments && renderComments()}\n            </section>\n            <AddComment \n                commentForm={commentForm}\n                renderNewComment={setState}\n                commentId={commentId}\n                formState={formState}\n                setIsNew={setCommentId}\n                setFormState={setFormState}\n                recipe={props.recipe}\n            />\n            {state.user_id == props.user.id && (\n              <>\n                <button>Edit Recipe</button>\n                <button onClick={handleDelete}>Delete Recipe</button>\n              </>\n            )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}