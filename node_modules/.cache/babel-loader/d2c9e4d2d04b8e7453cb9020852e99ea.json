{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditRecipe.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function EditRecipe(props) {\n  console.log(props);\n  const [state, setState] = useState({\n    title: \"\",\n    ingred_list: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    console.log(props.application.job_listing);\n\n    if (props.application.job_listing) {\n      setIsEditForm(true);\n      setState({\n        title: props.recipeObj.title,\n        ingred_list: props.recipeObj.ingred_list,\n        description: props.recipeObj.description\n      });\n    }\n  }, []);\n\n  const displayFormHandler = () => {\n    props.setRecipeForm(true);\n  };\n\n  const changeHandler = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(props.formState);\n  };\n\n  const changeHandlerFiles = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.files[0]\n    }));\n    console.log(props.formState);\n  };\n\n  const handleRecipeEdit = e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    const form = new FormData();\n    form.append(\"image\", props.formState.image);\n    form.append(\"video\", props.formState.video);\n    form.append(\"title\", props.formState.title);\n    form.append(\"ingred_list\", props.formState.ingred_list);\n    form.append(\"description\", props.formState.description);\n    fetch(\"http://localhost:3000/recipes\", {\n      method: \"PATCH\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: form\n    }).then(r => r.json()).then(updatedRecipe => {\n      console.log(updatedRecipe);\n      props.renderUpdatedRecipe(prevState => [updatedRecipe, ...prevState]);\n    });\n    props.setFormState({\n      image: \"\",\n      video: \"\",\n      title: \"\",\n      ingred_list: \"\",\n      description: \"\"\n    });\n    props.setRecipeForm(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.recipeForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Edit Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRecipeEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Ingredient List:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    name: \"ingred_list\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    name: \"description\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Edit Recipe\"));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditRecipe.js"],"names":["React","useState","useEffect","EditRecipe","props","console","log","state","setState","title","ingred_list","description","application","job_listing","setIsEditForm","recipeObj","displayFormHandler","setRecipeForm","changeHandler","e","persist","setFormState","prevState","target","name","value","formState","changeHandlerFiles","files","handleRecipeEdit","preventDefault","token","localStorage","getItem","form","FormData","append","image","video","fetch","method","headers","body","then","r","json","updatedRecipe","renderUpdatedRecipe","recipeForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function EditRecipe(props) {\n    console.log(props)\n    const [state, setState] = useState({\n        title: \"\",\n        ingred_list: \"\",\n        description: \"\",\n      });\n    \n    \n      useEffect(() => {\n        console.log(props.application.job_listing)\n        if(props.application.job_listing){\n            setIsEditForm(true)\n            setState({\n              title: props.recipeObj.title,\n              ingred_list: props.recipeObj.ingred_list,\n              description: props.recipeObj.description,\n            })\n        }\n      },[])\n\n    const displayFormHandler = () => {\n        props.setRecipeForm(true);\n    };\n\n    const changeHandler = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.value,\n        }));\n        console.log(props.formState);\n    };\n\n    const changeHandlerFiles = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.files[0],\n        }));\n        console.log(props.formState);\n    };\n\n    const handleRecipeEdit = (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem(\"token\")\n\n        const form = new FormData()\n        form.append(\"image\", props.formState.image)\n        form.append(\"video\", props.formState.video)\n        form.append(\"title\", props.formState.title)\n        form.append(\"ingred_list\", props.formState.ingred_list)\n        form.append(\"description\", props.formState.description)\n\n        fetch(\"http://localhost:3000/recipes\", {\n            method: \"PATCH\",\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n            },\n            body: form,\n        })\n            .then((r) => r.json())\n            .then((updatedRecipe) => {\n                console.log(updatedRecipe)\n                props.renderUpdatedRecipe((prevState => [updatedRecipe, ...prevState]))\n            });\n        props.setFormState({image: \"\", video: \"\", title: \"\", ingred_list: \"\", description: \"\"});\n        props.setRecipeForm(false);\n    };\n\n    return (\n        <>\n            {props.recipeForm ? (\n                <div className=\"form\">\n                    <h1>Edit Recipe</h1>\n                    <form onSubmit={handleRecipeEdit}>\n                        {/* <label>Image Upload:</label>\n                        <input type=\"file\" name=\"image\" onChange={changeHandlerFiles}/>\n                        <br/>\n                        <label>Video Upload</label>\n                        <input type=\"file\" name=\"video\" onChange={changeHandlerFiles}/>\n                        <br/> */}\n                        <label>Title:</label>\n                        <input type=\"text\" name=\"title\" onChange={changeHandler}/>\n                        <br/>\n                        <label>Ingredient List:</label>\n                        <input type=\"textarea\" name=\"ingred_list\" onChange={changeHandler}/>\n                        <br/>\n                        <label>Description:</label>\n                        <input type=\"textarea\" name=\"description\" onChange={changeHandler}/>\n                        <br/>\n                        <input type=\"submit\"/>\n                    </form>\n                    <button\n                        onClick={displayFormHandler}\n                        className=\"\"\n                    >\n                        Cancel\n                </button>\n                </div>\n                ) : (\n                <button\n                    onClick={displayFormHandler}\n                    className=\"\"\n                >\n                    Edit Recipe\n                </button>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}