{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditRecipe.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function EditRecipe(props) {\n  console.log(props);\n  const [editRecipeForm, setEditRecipeForm] = useState(false);\n  const [state, setState] = useState({\n    // image: \"\",\n    // video: \"\",\n    title: \"\",\n    ingred_list: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    console.log(props.recipeObj);\n\n    if (props.recipeObj) {\n      setState({\n        // image: props.recipeObj.image,\n        // video: props.recipeObj.video,\n        title: props.recipeObj.title,\n        ingred_list: props.recipeObj.ingred_list,\n        description: props.recipeObj.description\n      });\n    }\n  }, []);\n\n  const displayFormHandler = () => {\n    setEditRecipeForm(prevState => {\n      return !prevState;\n    });\n  };\n\n  const changeHandler = e => {\n    e.persist();\n    setState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(state);\n  };\n\n  const changeHandlerFiles = e => {\n    e.persist();\n    setState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.files[0]\n    }));\n    console.log(state);\n  };\n\n  const handleRecipeUpdate = e => {\n    e.preventDefault();\n    props.handleUpdate(state); // const token = localStorage.getItem(\"token\")\n    // const form = new FormData()\n    // form.append(\"image\", props.formState.image)\n    // form.append(\"video\", props.formState.video)\n    // form.append(\"title\", props.formState.title)\n    // form.append(\"ingred_list\", props.formState.ingred_list)\n    // form.append(\"description\", props.formState.description)\n    // fetch(\"http://localhost:3000/recipes\", {\n    //     method: \"PATCH\",\n    //     headers: {\n    //         \"Authorization\": `Bearer ${token}`,\n    //     },\n    //     body: form,\n    // })\n    //     .then((r) => r.json())\n    //     .then((updatedRecipe) => {\n    //         console.log(updatedRecipe)\n    //         props.renderUpdatedRecipe((prevState => [updatedRecipe, ...prevState]))\n    //     });\n    // setState({title: \"\", ingred_list: \"\", description: \"\"});\n\n    setEditRecipeForm(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, editRecipeForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Edit Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRecipeUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: changeHandler,\n    value: state.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Ingredient List:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    name: \"ingred_list\",\n    onChange: changeHandler,\n    value: state.ingred_list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    name: \"description\",\n    onChange: changeHandler,\n    value: state.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Edit Recipe\"));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/EditRecipe.js"],"names":["React","useState","useEffect","EditRecipe","props","console","log","editRecipeForm","setEditRecipeForm","state","setState","title","ingred_list","description","recipeObj","displayFormHandler","prevState","changeHandler","e","persist","target","name","value","changeHandlerFiles","files","handleRecipeUpdate","preventDefault","handleUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function EditRecipe(props) {\n    console.log(props)\n    const [editRecipeForm, setEditRecipeForm] = useState(false);\n    const [state, setState] = useState({\n        // image: \"\",\n        // video: \"\",\n        title: \"\",\n        ingred_list: \"\",\n        description: \"\",\n      });\n    \n    \n    useEffect(() => {\n    console.log(props.recipeObj)\n    if(props.recipeObj){\n        setState({\n            // image: props.recipeObj.image,\n            // video: props.recipeObj.video,\n            title: props.recipeObj.title,\n            ingred_list: props.recipeObj.ingred_list,\n            description: props.recipeObj.description,\n        })\n    }\n    },[])\n\n    const displayFormHandler = () => {\n        setEditRecipeForm((prevState) => {\n            return !prevState;\n        });\n    };\n\n    const changeHandler = (e) => {\n        e.persist();\n        setState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.value,\n        }));\n        console.log(state);\n    };\n\n    const changeHandlerFiles = (e) => {\n        e.persist();\n        setState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.files[0],\n        }));\n        console.log(state);\n    };\n\n    const handleRecipeUpdate = (e) => {\n        e.preventDefault()\n        props.handleUpdate(state)\n        // const token = localStorage.getItem(\"token\")\n\n        // const form = new FormData()\n        // form.append(\"image\", props.formState.image)\n        // form.append(\"video\", props.formState.video)\n        // form.append(\"title\", props.formState.title)\n        // form.append(\"ingred_list\", props.formState.ingred_list)\n        // form.append(\"description\", props.formState.description)\n\n        // fetch(\"http://localhost:3000/recipes\", {\n        //     method: \"PATCH\",\n        //     headers: {\n        //         \"Authorization\": `Bearer ${token}`,\n        //     },\n        //     body: form,\n        // })\n        //     .then((r) => r.json())\n        //     .then((updatedRecipe) => {\n        //         console.log(updatedRecipe)\n        //         props.renderUpdatedRecipe((prevState => [updatedRecipe, ...prevState]))\n        //     });\n        // setState({title: \"\", ingred_list: \"\", description: \"\"});\n        setEditRecipeForm(false);\n    };\n\n    return (\n        <>\n            {editRecipeForm ? (\n                <div className=\"form\">\n                    <h1>Edit Recipe</h1>\n                    <form onSubmit={handleRecipeUpdate}>\n                        {/* <label>Image Upload:</label>\n                        <input type=\"file\" name=\"image\" onChange={changeHandlerFiles} value={state.image}/>\n                        <br/>\n                        <label>Video Upload</label>\n                        <input type=\"file\" name=\"video\" onChange={changeHandlerFiles} value={state.video}/>\n                        <br/> */}\n                        <label>Title:</label>\n                        <input type=\"text\" name=\"title\" onChange={changeHandler} value={state.title}/>\n                        <br/>\n                        <label>Ingredient List:</label>\n                        <input type=\"textarea\" name=\"ingred_list\" onChange={changeHandler} value={state.ingred_list}/>\n                        <br/>\n                        <label>Description:</label>\n                        <input type=\"textarea\" name=\"description\" onChange={changeHandler} value={state.description}/>\n                        <br/>\n                        <input type=\"submit\"/>\n                    </form>\n                    <button\n                        onClick={displayFormHandler}\n                        className=\"buttons\"\n                    >\n                        Cancel\n                </button>\n                </div>\n                ) : (\n                <button\n                    onClick={displayFormHandler}\n                    className=\"buttons\"\n                >\n                    Edit Recipe\n                </button>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}