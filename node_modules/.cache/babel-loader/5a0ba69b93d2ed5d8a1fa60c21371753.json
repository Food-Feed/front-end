{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js\";\nimport React, { useState } from 'react';\nexport default function AddRecipe(props) {\n  console.log(props);\n  const [state, setState] = useState([]);\n  const [recipeForm, setRecipeForm] = useState(true);\n  const [recipeId, setRecipeId] = useState(\"\");\n  const [formState, setFormState] = useState({\n    title: \"\",\n    image: \"\",\n    video: \"\",\n    ingred_list: \"\",\n    description: \"\"\n  });\n\n  const displayFormHandler = () => {\n    props.setRecipeForm(prevState => {\n      return !prevState;\n    });\n  };\n\n  const handleRecipeCreation = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/recipes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Authorization: token,\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({ ...props.comment,\n        topic_id: props.topic_id\n      })\n    }).then(r => r.json()).then(newComment => {\n      console.log(newComment);\n      props.commentState(prevState => {\n        return {\n          topic: { ...prevState.topic,\n            comments: [...prevState.topic.comments, { ...newComment.comment,\n              user_name: newComment.user_name\n            }]\n          }\n        };\n      });\n    });\n    props.setComment({});\n    props.setPostForm(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.recipeForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"New Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Image Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    onChange: this.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Video Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"video\",\n    onChange: this.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Add Recipe\"));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js"],"names":["React","useState","AddRecipe","props","console","log","state","setState","recipeForm","setRecipeForm","recipeId","setRecipeId","formState","setFormState","title","image","video","ingred_list","description","displayFormHandler","prevState","handleRecipeCreation","e","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","comment","topic_id","then","r","json","newComment","commentState","topic","comments","user_name","setComment","setPostForm","onSubmit","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nexport default function AddRecipe(props) {\n    console.log(props)\n    const [state, setState] = useState([]);\n    const [recipeForm, setRecipeForm] = useState(true);\n    const [recipeId, setRecipeId] = useState(\"\");\n\n    const [formState, setFormState] = useState({\n        title: \"\",\n        image: \"\",\n        video: \"\",\n        ingred_list: \"\",\n        description: \"\",\n    });\n\n    const displayFormHandler = () => {\n        props.setRecipeForm((prevState) => {\n          return !prevState;\n        });\n    };\n\n    const handleRecipeCreation = (e) => {\n        e.preventDefault();\n        \n        fetch(\"http://localhost:3000/recipes\", {\n            method: \"POST\",\n            headers: {\n            \"Content-Type\": \"application/json\",\n            // Authorization: token,\n            Accept: \"application/json\",\n            },\n            body: JSON.stringify({ ...props.comment, topic_id: props.topic_id }),\n        })\n            .then((r) => r.json())\n            .then((newComment) => {\n            console.log(newComment);\n            props.commentState((prevState) => {\n                return {\n                topic: {\n                    ...prevState.topic,\n                    comments: [\n                    ...prevState.topic.comments,\n                    { ...newComment.comment, user_name: newComment.user_name },\n                    ],\n                },\n                };\n            });\n            });\n        props.setComment({});\n        props.setPostForm(false);\n    };\n\n    return (\n        <>\n            {props.recipeForm ? (\n                <div className=\"form\">\n                    <h1>New Recipe</h1>\n                    <form onSubmit={this.onSubmit}>\n                        <label>Image Upload</label>\n                        <input type=\"file\" name=\"image\" onChange={this.onChange}/>\n                        <br/>\n                        <label>Video Upload</label>\n                        <input type=\"file\" name=\"video\" onChange={this.onChange}/>\n                        <br/>\n                        <input type=\"submit\"/>\n                    </form>\n                </div>\n                ) : (\n                <button\n                    onClick={displayFormHandler}\n                    className=\"\"\n                >\n                    Add Recipe\n                </button>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}