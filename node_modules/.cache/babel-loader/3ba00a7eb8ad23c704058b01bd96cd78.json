{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js\";\nimport React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nexport default function AddRecipe(props) {\n  const displayFormHandler = () => {\n    props.setRecipeForm(prevState => {\n      return !prevState;\n    });\n  };\n\n  const changeHandler = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(props.formState);\n  };\n\n  const changeHandlerFiles = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.files[0]\n    }));\n    console.log(props.formState);\n  };\n\n  const handleRecipeCreation = e => {\n    e.preventDefault();\n    console.log(\"form state\", props.formState); // const token = localStorage.getItem(\"token\")\n    // const form = new FormData()\n    // form.append(\"image\", props.formState.image)\n    // form.append(\"video\", props.formState.video)\n    // form.append(\"title\", props.formState.title)\n    // form.append(\"ingred_list\", props.formState.ingred_list)\n    // form.append(\"description\", props.formState.description)\n    // fetch(\"http://localhost:3000/recipes\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Authorization\": `Bearer ${token}`,\n    //     },\n    //     body: form,\n    // })\n    //     .then((r) => r.json())\n    //     .then((newRecipe) => {\n    //         console.log(newRecipe)\n    //         props.renderNewRecipe((prevState => [newRecipe, ...prevState]))\n    //     });\n    // props.setFormState({image: \"\", video: \"\", title: \"\", ingred_list: \"\", description: \"\"});\n    // props.setRecipeForm(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.recipeForm ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"New Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRecipeCreation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Image Upload:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    onChange: changeHandlerFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Video Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"video\",\n    onChange: changeHandlerFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Ingredient List:\"), props.formState.ingredients.map((ingredient, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${ingredient}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, \"Ingredient\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"ingredient\",\n    name: \"ingredient\",\n    value: ingredient.ingred_detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Directions:\"), props.formState.recipe_steps.map((recipe_step, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: `${recipe_step}~${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"recipe_step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, \"Step\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"recipe_step\",\n    name: \"recipe_step\",\n    value: recipe_step.step_detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, \"+\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: displayFormHandler,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: displayFormHandler,\n    className: \"add-recipe-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"+\"));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipes-Page/AddRecipe.js"],"names":["React","useState","Fragment","styled","AddRecipe","props","displayFormHandler","setRecipeForm","prevState","changeHandler","e","persist","setFormState","target","name","value","console","log","formState","changeHandlerFiles","files","handleRecipeCreation","preventDefault","recipeForm","ingredients","map","ingredient","index","ingred_detail","recipe_steps","recipe_step","step_detail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAMC,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,KAAK,CAACE,aAAN,CAAqBC,SAAD,IAAe;AACjC,aAAO,CAACA,SAAR;AACD,KAFD;AAGH,GAJD;;AAMA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,OAAF;AACAN,IAAAA,KAAK,CAACO,YAAN,CAAoBJ,SAAD,KAAgB,EACjC,GAAGA,SAD8B;AAEjC,OAACE,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAFO,KAAhB,CAAnB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,SAAlB;AACH,GAPD;;AASA,QAAMC,kBAAkB,GAAIT,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,OAAF;AACAN,IAAAA,KAAK,CAACO,YAAN,CAAoBJ,SAAD,KAAgB,EACjC,GAAGA,SAD8B;AAEjC,OAACE,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASO,KAAT,CAAe,CAAf;AAFgB,KAAhB,CAAnB;AAIAJ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,SAAlB;AACH,GAPD;;AASA,QAAMG,oBAAoB,GAAIX,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACY,cAAF;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BZ,KAAK,CAACa,SAAhC,EAFgC,CAGhC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA1BD;;AA4BA,sBACI,0CACKb,KAAK,CAACkB,UAAN,gBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,IAAA,QAAQ,EAAEF,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,QAAQ,EAAEF,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,QAAQ,EAAEA,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,QAAQ,EAAEV,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,EAWKJ,KAAK,CAACa,SAAN,CAAgBM,WAAhB,CAA4BC,GAA5B,CAAgC,CAACC,UAAD,EAAaC,KAAb,kBAC7B,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,GAAED,UAAW,IAAGC,KAAM,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,EAAE,EAAC,YAHP;AAII,IAAA,IAAI,EAAC,YAJT;AAKI,IAAA,KAAK,EAAED,UAAU,CAACE,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,eAMI;AACI,IAAA,IAAI,EAAC,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,CAXJ,CADH,CAXL,eAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,eAuCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvCJ,EAwCKvB,KAAK,CAACa,SAAN,CAAgBW,YAAhB,CAA6BJ,GAA7B,CAAiC,CAACK,WAAD,EAAcH,KAAd,kBAC9B,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAG,GAAEG,WAAY,IAAGH,KAAM,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,EAAE,EAAC,aAHP;AAII,IAAA,IAAI,EAAC,aAJT;AAKI,IAAA,KAAK,EAAEG,WAAW,CAACC,WALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,eAMI;AACI,IAAA,IAAI,EAAC,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,CAXJ,CADH,CAxCL,eAmEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnEJ,eAoEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApEJ,CAFJ,eAwEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAEzB,kBAFb;AAGI,IAAA,SAAS,EAAC,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxEJ,CADH,gBAkFG;AACI,IAAA,OAAO,EAAEA,kBADb;AAEI,IAAA,SAAS,EAAC,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAnFR,CADJ;AA6FH","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport styled from 'styled-components';\n\nexport default function AddRecipe(props) {\n\n    const displayFormHandler = () => {\n        props.setRecipeForm((prevState) => {\n          return !prevState;\n        });\n    };\n\n    const changeHandler = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.value,\n        }));\n        console.log(props.formState);\n    };\n\n    const changeHandlerFiles = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.files[0],\n        }));\n        console.log(props.formState);\n    };\n\n    const handleRecipeCreation = (e) => {\n        e.preventDefault();\n        console.log(\"form state\", props.formState)\n        // const token = localStorage.getItem(\"token\")\n\n        // const form = new FormData()\n        // form.append(\"image\", props.formState.image)\n        // form.append(\"video\", props.formState.video)\n        // form.append(\"title\", props.formState.title)\n        // form.append(\"ingred_list\", props.formState.ingred_list)\n        // form.append(\"description\", props.formState.description)\n\n        // fetch(\"http://localhost:3000/recipes\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Authorization\": `Bearer ${token}`,\n        //     },\n        //     body: form,\n        // })\n        //     .then((r) => r.json())\n        //     .then((newRecipe) => {\n        //         console.log(newRecipe)\n        //         props.renderNewRecipe((prevState => [newRecipe, ...prevState]))\n        //     });\n        // props.setFormState({image: \"\", video: \"\", title: \"\", ingred_list: \"\", description: \"\"});\n        // props.setRecipeForm(false);\n    };\n\n    return (\n        <>\n            {props.recipeForm ? (\n                <div className=\"form\">\n                    <h1>New Recipe</h1>\n                    <form onSubmit={handleRecipeCreation}>\n                        <label>Image Upload:</label>\n                        <input type=\"file\" name=\"image\" onChange={changeHandlerFiles}/>\n                        <br/>\n                        <label>Video Upload</label>\n                        <input type=\"file\" name=\"video\" onChange={changeHandlerFiles}/>\n                        <br/>\n                        <label>Title:</label>\n                        <input type=\"text\" name=\"title\" onChange={changeHandler}/>\n                        <br/>\n                        <label>Ingredient List:</label>\n                        {props.formState.ingredients.map((ingredient, index) => (\n                            <Fragment key={`${ingredient}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"ingredient\">Ingredient</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"ingredient\"\n                                        name=\"ingredient\"\n                                        value={ingredient.ingred_detail}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"ingred_list\" onChange={changeHandler}/> */}\n                        <br/>\n                        <label>Directions:</label>\n                        {props.formState.recipe_steps.map((recipe_step, index) => (\n                            <Fragment key={`${recipe_step}~${index}`}>\n                                <div>\n                                    <label htmlFor=\"recipe_step\">Step</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"recipe_step\"\n                                        name=\"recipe_step\"\n                                        value={recipe_step.step_detail}\n                                    />\n                                </div>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        -\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                    >\n                                        +\n                                    </button>\n                                </div>\n                            </Fragment>\n                        ))}\n                        {/* <input type=\"textarea\" name=\"description\" onChange={changeHandler}/> */}\n                        <br/>\n                        <input type=\"submit\"/>\n                    </form>\n                    <button\n                        type=\"button\"\n                        onClick={displayFormHandler}\n                        className=\"\"\n                    >\n                        Cancel\n                </button>\n                </div>\n                ) : (\n                <button\n                    onClick={displayFormHandler}\n                    className=\"add-recipe-button\"\n                >\n                    +\n                </button>\n            )}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}