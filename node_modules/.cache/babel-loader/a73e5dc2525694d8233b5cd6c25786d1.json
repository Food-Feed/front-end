{"ast":null,"code":"var _jsxFileName = \"/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/AddComment.js\";\nimport React from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport RecipeDetail from './RecipeDetail';\nimport './RecipeDetail.css';\nexport default function AddComment(props) {\n  // console.log(props.recipe)\n  const changeHandler = e => {\n    e.persist();\n    props.setFormState(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n    console.log(props.formState);\n  };\n\n  const handleCommentCreation = e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:3000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({ ...props.recipe.comments,\n        recipe_id: props.recipe_id\n      })\n    }).then(r => r.json()).then(newComment => {\n      console.log(newComment); // props.commentState((prevState) => {\n      // return {\n      //     recipe: {\n      //     ...prevState.recipe,\n      //     comments: [\n      //         ...prevState.recipe.comments,\n      //         { ...newComment.comment, user_id: newComment.user_id },\n      //     ],\n      //     },\n      // };\n      // });\n    });\n    props.setFormState({\n      content: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleCommentCreation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"new-comment-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"New Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add your comment here...\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/hannahkofkin/Development/code/mod-5-project/front-end/src/components/Recipe-Detail-Page/AddComment.js"],"names":["React","Button","Form","RecipeDetail","AddComment","props","changeHandler","e","persist","setFormState","prevState","target","name","value","console","log","formState","handleCommentCreation","preventDefault","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","recipe","comments","recipe_id","then","r","json","newComment","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,oBAAP;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtC;AAEA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,OAAF;AACAH,IAAAA,KAAK,CAACI,YAAN,CAAoBC,SAAD,KAAgB,EACjC,GAAGA,SAD8B;AAEjC,OAACH,CAAC,CAACI,MAAF,CAASC,IAAV,GAAiBL,CAAC,CAACI,MAAF,CAASE;AAFO,KAAhB,CAAnB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,SAAlB;AACH,GAPD;;AASA,QAAMC,qBAAqB,GAAIV,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACW,cAAF;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASL,KAAM,EAF5B;AAGL,kBAAU;AAHL,OAF+B;AAOxCM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGtB,KAAK,CAACuB,MAAN,CAAaC,QAAlB;AAA4BC,QAAAA,SAAS,EAAEzB,KAAK,CAACyB;AAA7C,OAAf;AAPkC,KAAnC,CAAL,CASCC,IATD,CASOC,CAAD,IAAOA,CAAC,CAACC,IAAF,EATb,EAUCF,IAVD,CAUOG,UAAD,IAAgB;AAClBpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,UAAZ,EADkB,CAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAvBD;AAwBA7B,IAAAA,KAAK,CAACI,YAAN,CAAmB;AAAC0B,MAAAA,OAAO,EAAE;AAAV,KAAnB;AACH,GA5BD;;AA8BI,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAElB,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,IAAA,WAAW,EAAC,0BAAnB;AAA8C,IAAA,QAAQ,EAAEX,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,CADJ;AAWH","sourcesContent":["import React from 'react'\nimport { Button, Form } from 'semantic-ui-react'\nimport RecipeDetail from './RecipeDetail';\nimport './RecipeDetail.css'\n\nexport default function AddComment(props) {\n    // console.log(props.recipe)\n\n    const changeHandler = (e) => {\n        e.persist();\n        props.setFormState((prevState) => ({\n          ...prevState,\n          [e.target.name]: e.target.value,\n        }));\n        console.log(props.formState);\n    };\n\n    const handleCommentCreation = (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem(\"token\")\n        fetch(\"http://localhost:3000/comments\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`,\n            \"Accept\": \"application/json\",\n        },\n        body: JSON.stringify({ ...props.recipe.comments, recipe_id: props.recipe_id }),\n        })\n        .then((r) => r.json())\n        .then((newComment) => {\n            console.log(newComment);\n            // props.commentState((prevState) => {\n            // return {\n            //     recipe: {\n            //     ...prevState.recipe,\n            //     comments: [\n            //         ...prevState.recipe.comments,\n            //         { ...newComment.comment, user_id: newComment.user_id },\n            //     ],\n            //     },\n            // };\n            // });\n        });\n        props.setFormState({content: \"\"});\n    };\n\n        return (\n            <div className=\"form\">\n                <Form onSubmit={handleCommentCreation}>\n                    <Form.Field>\n                        <label id=\"new-comment-text\">New Comment</label>\n                        <input placeholder='Add your comment here...' onChange={changeHandler}/>\n                    </Form.Field>\n                    <Button type='submit'>Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n"]},"metadata":{},"sourceType":"module"}